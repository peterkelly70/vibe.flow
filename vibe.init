#!/bin/bash
set -euo pipefail

# Vibe-Flow Initializer Script
# Sets up .git-tools, installs vibe.* scripts, and configures git aliases

TOOLS_DIR=".git-tools"
mkdir -p "$TOOLS_DIR"

cat > "$TOOLS_DIR/vibe_push.sh" <<'EOF'
#!/bin/bash
set -euo pipefail

ITER_BRANCH="iterations"
MAIN_BRANCH="main"

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ "$CURRENT_BRANCH" != "$ITER_BRANCH" ]]; then
  echo "‚ùå You must be on the '$ITER_BRANCH' branch to run 'git vibe.push'."
  echo "üí° Run: git checkout $ITER_BRANCH"
  exit 1
fi

# Determine user message and --origin flag
USER_MSG="Snapshot from $ITER_BRANCH"
AUTO_PUSH=false

for arg in "$@"; do
  if [[ "$arg" == --origin ]]; then
    AUTO_PUSH=true
  else
    USER_MSG="$arg"
  fi
done

# Stage and commit uncommitted changes if present
if ! git diff-index --quiet HEAD --; then
  echo "üìù Uncommitted changes detected. Staging and committing automatically..."
  git add .
  ITER_HASH=$(git rev-parse --short HEAD)
  COMMIT_MSG="$ITER_HASH - $USER_MSG"
  git commit -m "$COMMIT_MSG"
  echo "‚úÖ Changes committed in '$ITER_BRANCH': $COMMIT_MSG"
else
  ITER_HASH=$(git rev-parse --short HEAD)
  COMMIT_MSG="$ITER_HASH - $USER_MSG"
fi

if ! git show-ref --verify --quiet "refs/heads/$MAIN_BRANCH"; then
  echo "‚ùå Target branch '$MAIN_BRANCH' does not exist."
  exit 1
fi

echo "üì¶ Applying snapshot from '$ITER_BRANCH' to '$MAIN_BRANCH'..."
git checkout "$MAIN_BRANCH"
git checkout "$ITER_BRANCH" -- .
git commit -am "$COMMIT_MSG"
git checkout "$ITER_BRANCH"

echo "‚úÖ Snapshot pushed to '$MAIN_BRANCH':"
echo "   $COMMIT_MSG"

if $AUTO_PUSH; then
  echo "üöÄ Pushing '$MAIN_BRANCH' to 'origin/$MAIN_BRANCH'..."
  git push origin "$MAIN_BRANCH"
  echo "‚úÖ Remote updated: origin/$MAIN_BRANCH is now up to date."
fi
EOF
chmod +x "$TOOLS_DIR/vibe_push.sh"


##############################################
# Git Aliases
##############################################
git config alias.vibe.push "!bash $TOOLS_DIR/vibe_push.sh"
git config alias.vibe.pull "!bash $TOOLS_DIR/vibe_pull.sh"
git config alias.vibe.clean "!bash $TOOLS_DIR/vibe_clean.sh"
git config alias.vibe.snapshot "!bash $TOOLS_DIR/vibe_snapshot.sh"
git config alias.vibe.list "!bash $TOOLS_DIR/vibe_list.sh"
git config alias.vibe.restore "!bash $TOOLS_DIR/vibe_restore.sh"


##############################################
# Prompt to add .git-tools to .gitignore
##############################################
GITIGNORE_FILE=".gitignore"

read -rp "üìÇ Do you want to add '$TOOLS_DIR' to .gitignore? [y/N]: " response
response=${response,,}

if [[ "$response" == "y" || "$response" == "yes" ]]; then
  if [[ -f "$GITIGNORE_FILE" ]]; then
    if ! grep -qxF "$TOOLS_DIR" "$GITIGNORE_FILE"; then
      echo "$TOOLS_DIR" >> "$GITIGNORE_FILE"
      echo "üõ°Ô∏è  '$TOOLS_DIR' added to .gitignore"
    else
      echo "‚ÑπÔ∏è  '$TOOLS_DIR' is already in .gitignore"
    fi
  else
    echo "$TOOLS_DIR" > "$GITIGNORE_FILE"
    echo "üõ°Ô∏è  Created .gitignore and added '$TOOLS_DIR'"
  fi
else
  echo "‚ùó '$TOOLS_DIR' was not added to .gitignore"
fi

##############################################
# Ensure 'iterations' branch exists
##############################################
if ! git show-ref --verify --quiet "refs/heads/iterations"; then
  echo -e "\nüå± 'iterations' branch not found. Creating from 'main'..."
  git checkout -b iterations main || {
    echo "‚ùå Failed to create 'iterations' from 'main'. Please check if 'main' exists."
    exit 1
  }
  echo "‚úÖ Created 'iterations' branch."
else
  echo "‚úÖ 'iterations' branch already exists."
fi

##############################################
# Final message
##############################################
echo -e "\n‚ú® Vibe-Flow tools installed successfully. Use:\n"
echo "   git vibe.push [msg] [--origin] - snapshot iterations to main"
echo "   git vibe.pull [branch]         - pull latest from branch into iterations"
echo "   git vibe.clean                 - clean up iterations history"
echo "   git vibe.snapshot [msg]       - commit manually to main"
echo "   git vibe.list                  - list snapshots in main"
echo "   git vibe.restore <hash>       - restore a snapshot to iterations"
echo -e "\nHappy vibe coding! üé∂"
